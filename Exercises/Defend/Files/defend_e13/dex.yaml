---
# Source: dex/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dex-auth-sa
  labels:
    app: dex
    env: prod
    chart: dex-1.2.0
    release: "dex"
    heritage: "Helm"
---
# Source: dex/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dex
  labels:
    app: dex
    env: prod
    chart: "dex-1.2.0"
    release: "dex"
    heritage: "Helm"
data:
  github-client-id: "MWFiMmMzZDRlNWY2ZzdoOA=="
  github-client-secret: "OTh6NzZ5NTR4MzJ3MQ=="
  google-client-id: "b3ZlcnJpZGUtbWU="
  google-client-secret: "b3ZlcnJpZGUtbWU="
  ldap-bindpw: "b3ZlcnJpZGUtbWU="
  microsoft-application-id: "b3ZlcnJpZGUtbWU="
  microsoft-client-secret: "b3ZlcnJpZGUtbWU="
---
# Source: dex/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dex
  labels:
    app: dex
    env: prod
    chart: "dex-1.2.0"
    release: "dex"
    heritage: "Helm"
data:
  config.yaml: |-
    issuer: http://127.0.0.1:5556 
    storage: # https://github.com/dexidp/dex/issues/798
      type: sqlite3
      config:
        file: /var/dex.db
    web:
      http: 0.0.0.0:5556
    frontend:
      theme: "coreos"
      issuer: "Example Co"
      issuerUrl: "https://example.com"
      logoUrl: https://example.com/images/logo-250x25.png
    expiry:
      signingKeys: "6h"
      idTokens: "24h"
    logger:
      level: debug
      format: json
    oauth2:
      responseTypes: ["code", "token", "id_token"]
      skipApprovalScreen: true
    connectors:
    - type: github
      id: github
      name: GitHub
      config:
        clientID: $GITHUB_CLIENT_ID
        clientSecret: $GITHUB_CLIENT_SECRET
        redirectURI: https://dex.k8s.example.com/callback
        orgs:
        - name: super-org
          teams:
          - team-red
    staticClients:
    - id: dex-k8s-authenticator
      name: dex-k8s-authenticator
      secret: generatedLongRandomPhrase
      redirectURIs:
        - https://login.k8s.example.com/callback/
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - "*"
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex-auth-sa
  namespace: kube-system
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: dex
  namespace: kube-system
rules:
- apiGroups:
  - dex.coreos.com
  resources:
  - authcodes
  - authrequests
  - connectors
  - oauth2clients
  - offlinesessionses
  - passwords
  - refreshtokens
  - signingkeies
  verbs:
  - "*"
---
# Source: dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: dex
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dex
subjects:
- kind: ServiceAccount
  name: dex-auth-sa
  namespace: kube-system
---
# Source: dex/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dex
  labels:
    app: dex
    env: prod
    chart: dex-1.2.0
    release: dex
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - port: 5556
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: dex
    release: dex
---
# Source: dex/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  labels:
    app: dex
    env: prod
    chart: dex-1.2.0
    release: dex
    heritage: Helm
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
  replicas: 1
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: dex
      env: prod
      release: dex
  template:
    metadata:
      labels:
        app: dex
        env: prod
        release: dex
      annotations:
        checksum/config: f119cf4a31db1607519582144f38892727261aeb80ac93256c7db3f6b0a5f61f
    spec:
      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
      serviceAccountName: dex-auth-sa
      containers:
      - name: dex
        image: "quay.io/dexidp/dex:v2.20.0"
        imagePullPolicy: IfNotPresent
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/config.yaml"]
        env:
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dex
              key: github-client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dex
              key: github-client-secret
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dex
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dex
              key: google-client-secret
        - name: LDAP_BINDPW
          valueFrom:
            secretKeyRef:
              name: dex
              key: ldap-bindpw
        - name: MICROSOFT_APPLICATION_ID
          valueFrom:
            secretKeyRef:
              name: dex
              key: microsoft-application-id
        - name: MICROSOFT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dex
              key: microsoft-client-secret
        ports:
        - name: http
          containerPort: 5556
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5556
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5556
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: config
          mountPath: /etc/dex
        resources:
          {}
---
# Source: dex/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dex
  labels:
    app: dex
    env: prod
    chart: dex-1.2.0
    release: dex
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:
  rules:
  - host: app.kernelcon2020k8s.org
    http:
      paths:
      - path: /
        backend:
          serviceName: dex
          servicePort: 5556
